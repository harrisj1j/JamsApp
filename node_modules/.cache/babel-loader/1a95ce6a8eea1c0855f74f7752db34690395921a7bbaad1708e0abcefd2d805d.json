{"ast":null,"code":"var _jsxFileName = \"/Users/jamarharris/JamsApp-master 4/src/Register.jsx\",\n  _s = $RefreshSig$();\nimport { defaultMaxListeners } from \"events\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport { auth } from \"./firebase\";\nimport MustContainElement from \"./MustContainElement\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{/* Administrator screen for registering user*/}\nexport const Register = props => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [role, setRole] = useState('');\n  const [userPassword, setUserPassword] = useState(\"\");\n\n  //password validation bool\n  const [containsUL, setContainsUL] = useState(false);\n  const [containsLL, setContainsLL] = useState(false);\n  const [containsN, setContainsN] = useState(false);\n  const [containsSC, setContainsSC] = useState(false);\n  const [contains8C, setContains8C] = useState(false);\n\n  //Ensure all validations are true\n  const [allValid, setAllValid] = useState(false);\n\n  //Label and state boolean value for each validation\n  const MustContainData = [[\"An uppercase letter (a-z)\", containsUL], [\"A lowercase letter (A-Z)\", containsLL], [\"A number (0-9)\", containsN], [\"A special character (!@#$)\", containsSC], [\"At least 8 characters\", contains8C]];\n  {/* event handler for registration form*/}\n  const registerUser = e => {\n    e.preventDefault();\n    createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      console.log(userCredential); //print user credentials in console when account is created\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const validatePassword = () => {\n    // has uppercase letter\n    if (userPassword.toLowerCase() !== userPassword) setContainsUL(true);else setContainsUL(false);\n\n    // has lowercase letter\n    if (userPassword.toUpperCase() !== userPassword) setContainsLL(true);else setContainsLL(false);\n\n    // has number\n    if (/\\d/.test(userPassword)) setContainsN(true);else setContainsN(false);\n\n    // has special character\n    if (/[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g.test(userPassword)) setContainsSC(true);else setContainsSC(false);\n\n    // has 8 characters\n    if (userPassword.length >= 8) setContains8C(true);else setContains8C(false);\n\n    // all validations passed\n    if (containsUL && containsLL && containsN && containsSC && contains8C) setAllValid(true);else setAllValid(false);\n  };\n\n  //registration form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: registerUser,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register new User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstname\",\n        children: \"first name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: firstname,\n        onChange: e => setFirstname(e.target.value),\n        name: \"firstname\",\n        id: \"firstname\",\n        placeholder: \"enter first name...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastname\",\n        children: \"last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: lastname,\n        onChange: e => setLastname(e.target.value),\n        name: \"lastname\",\n        id: \"lastname\",\n        placeholder: \"enter last name...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"role\",\n        children: \"role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: role,\n        onChange: e => setRole(e.target.value),\n        name: \"role\",\n        id: \"role\",\n        placeholder: \"user's role...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        placeholder: \"youremail@mail.com...\",\n        id: \"email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"userPassword\",\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: userPassword,\n        onChange: e => setUserPassword(e.target.value),\n        type: \"password\",\n        placeholder: \"*******\",\n        id: \"password\",\n        name: \"password\",\n        onKeyUp: validatePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"must-container cfb\",\n      children: MustContainData.map(data => /*#__PURE__*/_jsxDEV(MustContainElement, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 45\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"dpqSp/bKAEFhI3OAZlqr6PWhZ3Q=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["defaultMaxListeners","createUserWithEmailAndPassword","React","useState","auth","MustContainElement","Register","props","email","setEmail","password","setPassword","firstname","setFirstname","lastname","setLastname","role","setRole","userPassword","setUserPassword","containsUL","setContainsUL","containsLL","setContainsLL","containsN","setContainsN","containsSC","setContainsSC","contains8C","setContains8C","allValid","setAllValid","MustContainData","registerUser","e","preventDefault","then","userCredential","console","log","catch","error","validatePassword","toLowerCase","toUpperCase","test","length","target","value","map","data"],"sources":["/Users/jamarharris/JamsApp-master 4/src/Register.jsx"],"sourcesContent":["import { defaultMaxListeners } from \"events\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport React, {useState} from \"react\";\nimport { auth } from \"./firebase\";\nimport MustContainElement from \"./MustContainElement\";\n\n\n {/* Administrator screen for registering user*/}\nexport const Register = (props) =>{\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [firstname, setFirstname] = useState('');\n    const [lastname, setLastname] = useState('');\n    const [role, setRole] = useState('');\n\n    const [userPassword, setUserPassword] = useState(\"\")\n\n\n    //password validation bool\n    const [containsUL, setContainsUL ] = useState(false)\n    const [containsLL, setContainsLL ] = useState(false)\n    const [containsN, setContainsN ] = useState(false)\n    const [containsSC, setContainsSC ] = useState(false)\n    const [contains8C, setContains8C ] = useState(false)\n\n    //Ensure all validations are true\n    const [allValid, setAllValid] = useState(false)\n\n    //Label and state boolean value for each validation\n    const MustContainData = [\n        [\"An uppercase letter (a-z)\", containsUL],\n        [\"A lowercase letter (A-Z)\", containsLL],\n        [\"A number (0-9)\", containsN],\n        [\"A special character (!@#$)\", containsSC],\n        [\"At least 8 characters\", contains8C]\n        \n    ]\n\n    {/* event handler for registration form*/}\n    const registerUser= (e) => {\n        e.preventDefault();\n        createUserWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                console.log(userCredential); //print user credentials in console when account is created\n            })\n            .catch((error) =>{\n                console.log(error);\n            });\n    };\n\n\n    const validatePassword = () => {\n        // has uppercase letter\n        if (userPassword.toLowerCase() !== userPassword) setContainsUL(true)\n        else setContainsUL(false)\n    \n        // has lowercase letter\n        if (userPassword.toUpperCase() !== userPassword) setContainsLL(true)\n        else setContainsLL(false)\n    \n        // has number\n        if (/\\d/.test(userPassword)) setContainsN(true)\n        else setContainsN(false)\n    \n        // has special character\n        if (/[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g.test(userPassword)) setContainsSC(true)\n        else setContainsSC(false)\n    \n        // has 8 characters\n        if (userPassword.length >= 8) setContains8C(true)\n        else setContains8C(false)\n    \n        \n        // all validations passed\n        if (containsUL && containsLL && containsN && containsSC && contains8C ) setAllValid(true)\n        else setAllValid(false)\n    } \n\n    \n    //registration form\n    return(\n    \n    <div className=\"auth-form-container\">\n            <form className=\"register-form\" onSubmit={registerUser}>\n                <h2>Register new User</h2>\n                <label htmlFor=\"firstname\">first name</label>\n                <input value={firstname} onChange={(e) => setFirstname(e.target.value)} name=\"firstname\" id=\"firstname\" placeholder=\"enter first name...\"/>\n                <label htmlFor=\"lastname\">last name</label>\n                <input value={lastname} onChange={(e) => setLastname(e.target.value)} name=\"lastname\" id=\"lastname\" placeholder=\"enter last name...\"/>\n                <label htmlFor=\"role\">role</label>\n                <input value={role} onChange={(e) => setRole(e.target.value)} name=\"role\" id=\"role\" placeholder=\"user's role...\"/>\n                <label htmlFor=\"email\">email</label>\n                <input value={email} onChange={(e) => setEmail(e.target.value)}type=\"email\" placeholder=\"youremail@mail.com...\" id=\"email\" name=\"email\"/>\n                \n                <label htmlFor=\"userPassword\">password</label>\n                <input value={userPassword} onChange={(e) => setUserPassword(e.target.value)}type=\"password\" placeholder=\"*******\" id=\"password\" name=\"password\" onKeyUp={validatePassword}/>\n                <button type=\"submit\">Register Account</button>\n            </form>\n            <div className=\"must-container cfb\">\n        \n                {MustContainData.map(data=> <MustContainElement data={data}/>)}\n            </div>\n\n    </div>\n\n    );\n}\n\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}